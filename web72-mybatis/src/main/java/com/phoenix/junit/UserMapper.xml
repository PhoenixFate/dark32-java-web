<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 写Sql语句
namespace: 命名空间
-->
<mapper namespace="test">
    <!--
        resultType:如果没有配置别名，需要使用全名：com.phoenix.pojo.User
        sqlMapConfig.xml中配置了类的别名：
        	<typeAliases>
                <package name="com.phoenix.pojo"/>
            </typeAliases>
        所以可以直接使用别名
    -->
    <!-- 通过ID查询一个用户 -->
    <select id="findUserById" parameterType="Integer" resultType="User">
        select *
        from user
        where id = #{id}
    </select>

    <!-- //根据用户名称模糊查询用户列表
    #{} 占位符   select * from user where id = ？    占位符  ? ==  '五'
    ${} 字符串拼接   select * from user where username like '%五%'  字符串拼接
     -->
    <select id="findUserByUsername" parameterType="String" resultType="com.phoenix.pojo.User">
        select *
        from user
        where username like concat('%', #{username}, '%')
    </select>

    <!-- 添加用户 -->
    <insert id="insertUser" parameterType="com.phoenix.pojo.User">
        <!-- 执行完insert之后，返回id的值 -->
        <selectKey keyProperty="id" resultType="Integer" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        insert into user (username,birthday,address,sex)
        values (#{username},#{birthday},#{address},#{sex})
    </insert>

    <!-- 更新 -->
    <update id="updateUserById" parameterType="com.phoenix.pojo.User">
        update user
        set username = #{username},
            sex      = #{sex},
            birthday = #{birthday},
            address  = #{address}
        where id = #{id}
    </update>

    <!-- 删除 -->
    <delete id="deleteUserById" parameterType="Integer">
        delete
        from user
        where id = #{vvvvv}
    </delete>
</mapper>